#!/bin/bash

# Check for the correct number of arguments
if [ $# -ne 3 ]; then
    echo "Usage: $0 <time_to_run_in_seconds> <dns_server_ip> <dns_zone_name>"
    exit 1
fi

# Assign input parameters
TIME_TO_RUN=$1
DNS_SERVER=$2
DNS_ZONE=$3

# Get the current timestamp to calculate end time
END_TIME=$(( $(date +%s) + TIME_TO_RUN ))

# Function to generate a random hostname of 5 characters
generate_random_hostname() {
    echo $(LC_CTYPE=C tr -dc 'a-z0-9' </dev/urandom | head -c 5)
}

# Function to generate a random IP address
generate_random_ip() {
    echo "$((RANDOM % 256)).$((RANDOM % 256)).$((RANDOM % 256)).$((RANDOM % 256))"
}

# Main loop running for the specified time
while [ $(date +%s) -lt $END_TIME ]; do
    HOSTNAME=$(generate_random_hostname)
    IP_ADDRESS=$(generate_random_ip)

    # Create nsupdate command file
    nsupdate_file=$(mktemp)
    echo "server $DNS_SERVER" > $nsupdate_file
    echo "zone $DNS_ZONE" >> $nsupdate_file
    echo "update add $HOSTNAME.$DNS_ZONE. 300 A $IP_ADDRESS" >> $nsupdate_file
    echo "send" >> $nsupdate_file

    # Execute nsupdate
    if nsupdate -v $nsupdate_file; then
        echo "Successfully added $HOSTNAME.$DNS_ZONE with IP $IP_ADDRESS"
    else
        echo "Failed to add $HOSTNAME.$DNS_ZONE with IP $IP_ADDRESS"
    fi

    # Clean up temporary file
    rm -f $nsupdate_file

    # Brief pause to prevent overloading
    sleep 1

done

echo "DNS record insertion completed."
